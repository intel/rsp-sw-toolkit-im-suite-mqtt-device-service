# /*******************************************************************************
#  * Edited compose for Edinburgh.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *******************************************************************************/

version: '3.4'
volumes:
  db-data:
  log-data:
  consul-config:
  consul-data:

networks:
  edgex-network:

services:
  volume:
    image: edgexfoundry/docker-edgex-volume:1.0.0
    networks:
      edgex-network:
        aliases:
          - edgex-files
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  consul:
    image: consul:1.3.1
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
    hostname: edgex-core-consul
    networks:
      edgex-network:
        aliases:
          - edgex-core-consul
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  config-seed:
    image: edgexfoundry/docker-core-config-seed-go:1.0.1
    hostname: edgex-core-config-seed
    networks:
      edgex-network:
        aliases:
          - edgex-core-config-seed
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data
    # this only needs to be run once to self-configure. only restart if there was a failure.
    deploy:
      restart_policy:
        condition: on-failure

  mongo:
    image: edgexfoundry/docker-edgex-mongo:1.0.0
    ports:
      - "27017:27017"
    hostname: edgex-mongo
    networks:
      edgex-network:
        aliases:
          - edgex-mongo
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  logging:
    image: edgexfoundry/docker-support-logging-go:1.0.1
    ports:
      - "48061:48061"
    hostname: edgex-support-logging
    networks:
      edgex-network:
        aliases:
          - edgex-support-logging
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  metadata:
    image: edgexfoundry/docker-core-metadata-go:1.0.1
    ports:
      - "48081:48081"
    hostname: edgex-core-metadata
    networks:
      edgex-network:
        aliases:
          - edgex-core-metadata
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  data:
    image: edgexfoundry/docker-core-data-go:1.0.1
    ports:
      - "48080:48080"
      - "5563:5563"
    hostname: edgex-core-data
    networks:
      edgex-network:
        aliases:
          - edgex-core-data
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  command:
    image: edgexfoundry/docker-core-command-go:1.0.1
    ports:
      - "48082:48082"
    hostname: edgex-core-command
    networks:
      edgex-network:
        aliases:
          - edgex-core-command
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config
      - consul-data:/consul/data

  mqtt-device-service:
    image: ${IMAGE}
    ports:
      - "49982:49982"
    networks:
      - edgex-network
    depends_on:
      - data
      - command
    extra_hosts:
      - "mosquitto-server:172.17.0.1"
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config

#################################################################
# Tooling
#################################################################

  portainer:
    image:  portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    depends_on:
      - volume
    restart: always